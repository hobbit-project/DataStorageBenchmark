sparql select ?first ?last ((coalesce(?s1, 0) - coalesce(?s2,0)) as ?score) ?fof ?gender ?locationname #Q10 
where {
   {select distinct ?fof
    where {
        sn:pers%personId% snvoc:knows ?fr .
        ?fr snvoc:knows ?fof .
        filter (?fof != sn:pers%personId%) .
        minus { sn:pers%personId% snvoc:knows ?fof } .
    }
   } .
   optional { ?fof snvoc:firstName ?first } .
   optional { ?fof snvoc:lastName ?last } .
   ?fof snvoc:gender ?gender .     ?fof snvoc:birthday ?bday .
   ?fof snvoc:isLocatedIn ?based . ?based foaf:name ?locationname .
   filter (1 = if (month (?bday) = %month1%, if (day(?bday) >= 21, 1, 0), if (month (?bday) = %month2%, if (day(?bday) < 22, 1, 0), 0))) .
   optional {
     {select ?fof (count (distinct ?post) as ?s1)
      where {
        ?post a snvoc:Post .
        ?post snvoc:hasCreator ?fof .
        ?post snvoc:hasTag ?tag .
        sn:pers%personId% snvoc:hasInterest ?tag
      }
      group by ?fof
     }	    
   }.
   optional {
     {select ?fof (count (distinct ?post) as ?s2)
      where {
        ?post a snvoc:Post .
        ?post snvoc:hasCreator ?fof .
        filter (!exists {sn:pers%personId% snvoc:hasInterest ?tag. ?post snvoc:hasTag ?tag .})
      }
      group by ?fof
     }
   }.
}
order by desc(?score) ?fof
limit 10
